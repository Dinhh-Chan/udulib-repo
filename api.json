{
    "openapi": "3.0.3",
    "info": {
      "title": "Document Management System API",
      "description": "API for managing academic documents, majors, subjects, users, comments, ratings, forums, and more.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://api.document-system.com/v1",
        "description": "Main API server"
      }
    ],
    "components": {
      "securitySchemes": {
        "BearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "Error": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "example": "Invalid request"
            },
            "message": {
              "type": "string",
              "example": "Missing required field"
            }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "user_id": { "type": "integer" },
            "username": { "type": "string" },
            "email": { "type": "string" },
            "full_name": { "type": "string" },
            "role": { "type": "string", "enum": ["student", "lecturer", "admin"] },
            "status": { "type": "string", "enum": ["active", "banned", "pending"] },
            "university_id": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" },
            "last_login": { "type": "string", "format": "date-time" }
          }
        },
        "Major": {
          "type": "object",
          "properties": {
            "major_id": { "type": "integer" },
            "major_name": { "type": "string" },
            "major_code": { "type": "string" },
            "description": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "AcademicYear": {
          "type": "object",
          "properties": {
            "year_id": { "type": "integer" },
            "year_name": { "type": "string" },
            "year_order": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "Subject": {
          "type": "object",
          "properties": {
            "subject_id": { "type": "integer" },
            "subject_name": { "type": "string" },
            "subject_code": { "type": "string" },
            "description": { "type": "string" },
            "major_id": { "type": "integer" },
            "year_id": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "Document": {
          "type": "object",
          "properties": {
            "document_id": { "type": "integer" },
            "title": { "type": "string" },
            "description": { "type": "string" },
            "file_path": { "type": "string" },
            "file_size": { "type": "integer" },
            "file_type": { "type": "string" },
            "subject_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "status": { "type": "string", "enum": ["approved", "pending", "rejected"] },
            "view_count": { "type": "integer" },
            "download_count": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "Tag": {
          "type": "object",
          "properties": {
            "tag_id": { "type": "integer" },
            "tag_name": { "type": "string" },
            "created_at": { "type": "string", "format": "date-time" }
          }
        },
        "Comment": {
          "type": "object",
          "properties": {
            "comment_id": { "type": "integer" },
            "document_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "content": { "type": "string" },
            "status": { "type": "string", "enum": ["approved", "pending", "rejected"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "Rating": {
          "type": "object",
          "properties": {
            "rating_id": { "type": "integer" },
            "document_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "score": { "type": "integer", "minimum": 0, "maximum": 5 },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "DocumentHistory": {
          "type": "object",
          "properties": {
            "history_id": { "type": "integer" },
            "document_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "action": { "type": "string", "enum": ["view", "download"] },
            "created_at": { "type": "string", "format": "date-time" }
          }
        },
        "SharedLink": {
          "type": "object",
          "properties": {
            "link_id": { "type": "integer" },
            "document_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "share_token": { "type": "string" },
            "expiration_date": { "type": "string", "format": "date-time" },
            "created_at": { "type": "string", "format": "date-time" }
          }
        },
        "Forum": {
          "type": "object",
          "properties": {
            "forum_id": { "type": "integer" },
            "subject_id": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" }
          }
        },
        "ForumPost": {
          "type": "object",
          "properties": {
            "post_id": { "type": "integer" },
            "forum_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "title": { "type": "string" },
            "content": { "type": "string" },
            "status": { "type": "string", "enum": ["approved", "pending", "rejected"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "ForumReply": {
          "type": "object",
          "properties": {
            "reply_id": { "type": "integer" },
            "post_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "content": { "type": "string" },
            "status": { "type": "string", "enum": ["approved", "pending", "rejected"] },
            "created_at": { "type": "string", "format": "date-time" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "SystemConfig": {
          "type": "object",
          "properties": {
            "config_id": { "type": "integer" },
            "config_key": { "type": "string" },
            "config_value": { "type": "string" },
            "description": { "type": "string" },
            "updated_at": { "type": "string", "format": "date-time" }
          }
        },
        "Notification": {
          "type": "object",
          "properties": {
            "notification_id": { "type": "integer" },
            "user_id": { "type": "integer" },
            "title": { "type": "string" },
            "content": { "type": "string" },
            "is_read": { "type": "boolean" },
            "type": { "type": "string" },
            "reference_id": { "type": "integer" },
            "created_at": { "type": "string", "format": "date-time" }
          }
        }
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "paths": {
      "/majors": {
        "get": {
          "summary": "Get list of majors",
          "tags": ["Majors"],
          "responses": {
            "200": {
              "description": "List of majors",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Major" }
                  }
                }
              }
            },
            "400": { "$ref": "#/components/schemas/Error" }
          }
        },
        "post": {
          "summary": "Create a new major (admin only)",
          "tags": ["Majors"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "major_name": { "type": "string" },
                    "major_code": { "type": "string" },
                    "description": { "type": "string" }
                  },
                  "required": ["major_name", "major_code"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Major created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Major" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "400": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/majors/{id}": {
        "put": {
          "summary": "Update a major (admin only)",
          "tags": ["Majors"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "major_name": { "type": "string" },
                    "major_code": { "type": "string" },
                    "description": { "type": "string" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Major updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Major" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete a major (admin only)",
          "tags": ["Majors"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Major deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/academic-years": {
        "get": {
          "summary": "Get list of academic years",
          "tags": ["Academic Years"],
          "responses": {
            "200": {
              "description": "List of academic years",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/AcademicYear" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new academic year (admin only)",
          "tags": ["Academic Years"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "year_name": { "type": "string" },
                    "year_order": { "type": "integer" }
                  },
                  "required": ["year_name", "year_order"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Academic year created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/AcademicYear" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/academic-years/{id}": {
        "put": {
          "summary": "Update an academic year (admin only)",
          "tags": ["Academic Years"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "year_name": { "type": "string" },
                    "year_order": { "type": "integer" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Academic year updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/AcademicYear" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete an academic year (admin only)",
          "tags": ["Academic Years"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Academic year deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/subjects": {
        "get": {
          "summary": "Get list of subjects",
          "tags": ["Subjects"],
          "parameters": [
            {
              "name": "major_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "year_id",
              "in": "query",
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of subjects",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Subject" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new subject (admin only)",
          "tags": ["Subjects"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subject_name": { "type": "string" },
                    "subject_code": { "type": "string" },
                    "description": { "type": "string" },
                    "major_id": { "type": "integer" },
                    "year_id": { "type": "integer" }
                  },
                  "required": ["subject_name", "subject_code", "major_id", "year_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Subject created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Subject" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/subjects/{id}": {
        "put": {
          "summary": "Update a subject (admin only)",
          "tags": ["Subjects"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subject_name": { "type": "string" },
                    "subject_code": { "type": "string" },
                    "description": { "type": "string" },
                    "major_id": { "type": "integer" },
                    "year_id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Subject updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Subject" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete a subject (admin only)",
          "tags": ["Subjects"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Subject deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/documents": {
        "get": {
          "summary": "Get list of documents",
          "tags": ["Documents"],
          "parameters": [
            {
              "name": "subject_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "major_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "year_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "file_type",
              "in": "query",
              "schema": { "type": "string" }
            },
            {
              "name": "search",
              "in": "query",
              "schema": { "type": "string" },
              "description": "Search by document title or tag"
            },
            {
              "name": "status",
              "in": "query",
              "schema": { "type": "string", "enum": ["approved", "pending", "rejected"] }
            }
          ],
          "responses": {
            "200": {
              "description": "List of documents",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Document" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Upload a new document (authenticated users)",
          "tags": ["Documents"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "file": { "type": "string", "format": "binary" },
                    "subject_id": { "type": "integer" },
                    "tags": { "type": "array", "items": { "type": "string" } }
                  },
                  "required": ["title", "file", "subject_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Document uploaded",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Document" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "400": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/documents/{id}": {
        "get": {
          "summary": "Get document details",
          "tags": ["Documents"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "Document details",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Document" }
                }
              }
            },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "put": {
          "summary": "Update a document (uploader or admin)",
          "tags": ["Documents"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "status": { "type": "string", "enum": ["approved", "pending", "rejected"] }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Document updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Document" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete a document (uploader or admin)",
          "tags": ["Documents"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Document deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/documents/{id}/download": {
        "get": {
          "summary": "Download a document",
          "tags": ["Documents"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "Document file",
              "content": {
                "application/octet-stream": {
                  "schema": { "type": "string", "format": "binary" }
                }
              }
            },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/tags": {
        "get": {
          "summary": "Get list of tags",
          "tags": ["Tags"],
          "responses": {
            "200": {
              "description": "List of tags",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Tag" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new tag",
          "tags": ["Tags"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tag_name": { "type": "string" }
                  },
                  "required": ["tag_name"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Tag created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Tag" }
                }
              }
            },
            "400": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/document-tags": {
        "post": {
          "summary": "Assign a tag to a document",
          "tags": ["Tags"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_id": { "type": "integer" },
                    "tag_id": { "type": "integer" }
                  },
                  "required": ["document_id", "tag_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Tag assigned",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/DocumentTag" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/document-tags/{id}": {
        "delete": {
          "summary": "Remove a tag from a document",
          "tags": ["Tags"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Tag removed" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/comments": {
        "get": {
          "summary": "Get comments for a document",
          "tags": ["Comments"],
          "parameters": [
            {
              "name": "document_id",
              "in": "query",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of comments",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Comment" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add a comment to a document",
          "tags": ["Comments"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_id": { "type": "integer" },
                    "content": { "type": "string" }
                  },
                  "required": ["document_id", "content"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Comment added",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Comment" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/comments/{id}": {
        "delete": {
          "summary": "Delete a comment (commenter or admin)",
          "tags": ["Comments"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Comment deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/ratings": {
        "get": {
          "summary": "Get ratings for a document",
          "tags": ["Ratings"],
          "parameters": [
            {
              "name": "document_id",
              "in": "query",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of ratings",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Rating" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add a rating to a document",
          "tags": ["Ratings"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_id": { "type": "integer" },
                    "score": { "type": "integer", "minimum": 0, "maximum": 5 }
                  },
                  "required": ["document_id", "score"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Rating added",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Rating" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/ratings/{id}": {
        "put": {
          "summary": "Update a rating (rater only)",
          "tags": ["Ratings"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "score": { "type": "integer", "minimum": 0, "maximum": 5 }
                  },
                  "required": ["score"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Rating updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Rating" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete a rating (rater or admin)",
          "tags": ["Ratings"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Rating deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/history": {
        "get": {
          "summary": "Get document access history (authenticated user)",
          "tags": ["Document History"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "action",
              "in": "query",
              "schema": { "type": "string", "enum": ["view", "download"] }
            }
          ],
          "responses": {
            "200": {
              "description": "List of document history",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/DocumentHistory" }
                  }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/shared-links": {
        "post": {
          "summary": "Create a shared link for a document",
          "tags": ["Shared Links"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document_id": { "type": "integer" },
                    "expiration_date": { "type": "string", "format": "date-time" }
                  },
                  "required": ["document_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Shared link created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/SharedLink" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/shared-links/{token}": {
        "get": {
          "summary": "Access a document via shared link",
          "tags": ["Shared Links"],
          "parameters": [
            {
              "name": "token",
              "in": "path",
              "required": true,
              "schema": { "type": "string" }
            }
          ],
          "responses": {
            "200": {
              "description": "Document details",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Document" }
                }
              }
            },
            "404": { "$ref": "#/components/schemas/Error" },
            "410": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/forums": {
        "get": {
          "summary": "Get list of forums",
          "tags": ["Forums"],
          "parameters": [
            {
              "name": "subject_id",
              "in": "query",
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of forums",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Forum" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new forum (admin only)",
          "tags": ["Forums"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subject_id": { "type": "integer" }
                  },
                  "required": ["subject_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Forum created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Forum" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/forum-posts": {
        "get": {
          "summary": "Get list of forum posts",
          "tags": ["Forums"],
          "parameters": [
            {
              "name": "forum_id",
              "in": "query",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of forum posts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ForumPost" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new forum post",
          "tags": ["Forums"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "forum_id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" }
                  },
                  "required": ["forum_id", "title", "content"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Forum post created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ForumPost" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/forum-posts/{id}": {
        "delete": {
          "summary": "Delete a forum post (poster or admin)",
          "tags": ["Forums"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Forum post deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/forum-replies": {
        "get": {
          "summary": "Get list of forum replies",
          "tags": ["Forums"],
          "parameters": [
            {
              "name": "post_id",
              "in": "query",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of forum replies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/ForumReply" }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Add a reply to a forum post",
          "tags": ["Forums"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "post_id": { "type": "integer" },
                    "content": { "type": "string" }
                  },
                  "required": ["post_id", "content"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Forum reply added",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/ForumReply" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/forum-replies/{id}": {
        "delete": {
          "summary": "Delete a forum reply (replier or admin)",
          "tags": ["Forums"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "Forum reply deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/users/register": {
        "post": {
          "summary": "Register a new user",
          "tags": ["Users"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "username": { "type": "string" },
                    "email": { "type": "string" },
                    "password": { "type": "string" },
                    "university_id": { "type": "string" }
                  },
                  "required": ["username", "email", "password", "university_id"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/User" }
                }
              }
            },
            "400": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/users/login": {
        "post": {
          "summary": "Login a user",
          "tags": ["Users"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": { "type": "string" },
                    "password": { "type": "string" }
                  },
                  "required": ["email", "password"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": { "type": "string" },
                      "user": { "$ref": "#/components/schemas/User" }
                    }
                  }
                }
              }
            },
            "401": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/users/google-login": {
        "post": {
          "summary": "Login with Google OAuth",
          "tags": ["Users"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "google_token": { "type": "string" }
                  },
                  "required": ["google_token"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Google login successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": { "type": "string" },
                      "user": { "$ref": "#/components/schemas/User" }
                    }
                  }
                }
              }
            },
            "401": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "summary": "Get user details (self or admin)",
          "tags": ["Users"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "200": {
              "description": "User details",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/User" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "put": {
          "summary": "Update user details (self or admin)",
          "tags": ["Users"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "full_name": { "type": "string" },
                    "role": { "type": "string", "enum": ["student", "lecturer", "admin"] },
                    "status": { "type": "string", "enum": ["active", "banned", "pending"] }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/User" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        },
        "delete": {
          "summary": "Delete a user (admin only)",
          "tags": ["Users"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "responses": {
            "204": { "description": "User deleted" },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/config": {
        "get": {
          "summary": "Get system configurations (admin only)",
          "tags": ["System Config"],
          "security": [{ "BearerAuth": [] }],
          "responses": {
            "200": {
              "description": "List of configurations",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/SystemConfig" }
                  }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        },
        "post": {
          "summary": "Create or update a system configuration (admin only)",
          "tags": ["System Config"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config_key": { "type": "string" },
                    "config_value": { "type": "string" },
                    "description": { "type": "string" }
                  },
                  "required": ["config_key", "config_value"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Configuration created/updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/SystemConfig" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/notifications": {
        "get": {
          "summary": "Get notifications for a user",
          "tags": ["Notifications"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "schema": { "type": "integer" }
            },
            {
              "name": "is_read",
              "in": "query",
              "schema": { "type": "boolean" }
            }
          ],
          "responses": {
            "200": {
              "description": "List of notifications",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Notification" }
                  }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        },
        "post": {
          "summary": "Create a notification (admin or system-triggered)",
          "tags": ["Notifications"],
          "security": [{ "BearerAuth": [] }],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": { "type": "integer" },
                    "title": { "type": "string" },
                    "content": { "type": "string" },
                    "type": { "type": "string" },
                    "reference_id": { "type": "integer" }
                  },
                  "required": ["user_id", "title", "content", "type"]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Notification created",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Notification" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "/notifications/{id}": {
        "put": {
          "summary": "Mark a notification as read",
          "tags": ["Notifications"],
          "security": [{ "BearerAuth": [] }],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": { "type": "integer" }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_read": { "type": "boolean" }
                  },
                  "required": ["is_read"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Notification updated",
              "content": {
                "application/json": {
                  "schema": { "$ref": "#/components/schemas/Notification" }
                }
              }
            },
            "403": { "$ref": "#/components/schemas/Error" },
            "404": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    }
  }